part of tsupdate;

class UpdateData {
  static final dynamic trans =
      UTF8.decoder.fuse(const LineSplitter()).fuse(const UpdateItemFromWeb());

  List<UpdateItem> itemsFromWeb;
  List<UpdateItem> itemsFromDisk;
  File updateFile;

  HttpClient client;
  YamlMap credData;

  UpdateData(YamlMap this.credData) {
    client = new HttpClient();
    client.addCredentials(Uri.parse(credData['website']), credData["realm"],
        new HttpClientBasicCredentials(credData["user"], credData["password"]));
    client.maxConnectionsPerHost = 5;
  }

  Future initDataFromWeb(UpdateItem criteria) async {
    HttpClientRequest req = await client
        .getUrl(Uri.parse("${credData['website']}/${credData['master_file']}"));
    HttpClientResponse response = await req.close();
    itemsFromWeb = await response
        .transform(trans)
        .where((item) => item.matchesCriteria(criteria))
        .toList();
  }

  Future initDataFromDisk(String storePath) async {
    updateFile = new File(path.join(storePath, credData["master_file"]));
    if (updateFile.existsSync())
      itemsFromDisk = await updateFile.openRead().transform(trans).toList();
    else
      itemsFromDisk = new List<UpdateItem>();
  }

  Future downloadPatches(String storePath) async {
    new File(path.join(storePath, credData['tag_file'])).createSync();

    IOSink sink = updateFile.openWrite();
    sink.writeln('''----------------------------
----------------------------
TopSolid'Update 7.10.300.111

This file contains the list of available Updates for TopSolid'Update.
DO NOT EDIT THIS FILE, IT'S AN AUTO-GENERATED FILE.

####################################

''');
    itemsFromDisk.forEach((UpdateItem ui) => ui.writeMasterFileEntry(sink));

    await Future.wait(itemsFromWeb
        .where((UpdateItem ui) => !itemsFromDisk.contains(ui))
        .map((UpdateItem ui) => ui.downloadPatchIfInvalid(
            client, credData['website'], storePath, sink)));
    sink.close();
  }
}
